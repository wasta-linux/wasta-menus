#!/bin/bash

# Library of functions for wasta-menus

WASTA_DEFAULT_APPS="/etc/wasta-menus-default-apps.txt"
WASTA_USER_APPS_DIR="$HOME/.local/share/wasta-user/applications"
WASTA_SYSTEM_APPS_DIR="$HOME/.local/share/wasta-system/applications"
USER_APPS_DIR="$HOME/.local/share/applications"
USER_APPS_DIR_SAVE="$HOME/.local/share/applications-save"
USER_FLATPAK_APPS_DIR="$HOME/.local/share/flatpak/exports/share/applications"
RESTRICT_APPS="$HOME/.local/bin/xdg-restrict-applications"

LISTDIR=$HOME/.cache/wasta-menus
mkdir -p "$LISTDIR"

SYSTEM_APPS_DIRS=(
    /usr/share/applications
    /usr/local/share/applications
    /usr/share/gnome/applications
    /usr/share/cinnamon/applications
    /usr/share/xfce4/applications
    /var/lib/flatpak/exports/share/applications
    /var/lib/snapd/desktop/applications)

# Functions to enable and disable wasta menus, based on the presence or absence
# of the $RESTRICT_APPS utility (which is a symlink to the one in /usr/bin)

wasta_menus_enabled()
{
    [ -x "$RESTRICT_APPS" ]
}

disable_wasta_menus()
{
    # replace user's saved local application launchers (if exists)
    if [ -e "$USER_APPS_DIR_SAVE" ];
    then
        find "$USER_APPS_DIR_SAVE" -type f | \
            sed "s@$USER_APPS_DIR_SAVE/@@" > $LISTDIR/user-app-list-save.txt
        while read -r "LINE" <&3;
        do
            move_save_to_local "$LINE"
        done 3< "$LISTDIR/user-app-list-save.txt"
        rm -rf "$USER_APPS_DIR_SAVE"
    fi

    # disable wasta-menus
    rm -f "$RESTRICT_APPS"
}

move_save_to_local()
{
    # move from users' saved local apps to main local apps location
    LOCAL_APP_DIR="$(dirname "$USER_APPS_DIR/$1")"
    mkdir -p "$LOCAL_APP_DIR"
    # don't overwrite (in case user updated app while wasta-menus was active)
    mv -n "$USER_APPS_DIR_SAVE/$1" "$LOCAL_APP_DIR"
}

move_local_to_save()
{
    # remove user's local application launchers not part of wasta-menus
    # wine apps will be in subfolders of user's applications directory
    mkdir -p "$USER_APPS_DIR"
    find "$USER_APPS_DIR" -iname "*.desktop" > "$LISTDIR/user-app-list.txt"
    sed -i -e "s@$USER_APPS_DIR/@@" "$LISTDIR/user-app-list.txt"
    while read -r "LINE" <&3;
    do
        LOCAL_APP_DESKTOP="${LINE##*/}"
        LOCAL_APP_DIR="$(dirname "$USER_APPS_DIR_SAVE/$LINE")"
        # if .desktop file not in wasta-user or wasta-system lists, then remove
        # from user's applications folder
        if [ ! -e "$WASTA_USER_APPS_DIR/$LOCAL_APP_DESKTOP" ] && \
           [ ! -e "$WASTA_SYSTEM_APPS_DIR/$LOCAL_APP_DESKTOP" ];
        then
            mkdir -p "$LOCAL_APP_DIR"
            mv "$USER_APPS_DIR/$LINE" "$LOCAL_APP_DIR"
        fi
    done 3< "$LISTDIR/user-app-list.txt"
}

enable_wasta_menus()
{
    # IF any local apps remain not in the user's wasta-menus, move them to save
    move_local_to_save

    # enable wasta-menus
    mkdir -p "$(dirname "$RESTRICT_APPS")"
    ln -sf "$(which xdg-restrict-applications)" "$RESTRICT_APPS"

    # make sure user still has a defaults.list
    mkdir -p "$WASTA_SYSTEM_APPS_DIR"
    ln -sf /usr/share/applications/defaults.list "$WASTA_SYSTEM_APPS_DIR"
}

# Functions to manipulate a WASTA_USER_APPS_DIR

wasta_apps_dir_exists()
{
    [ -d "$WASTA_USER_APPS_DIR" ]
}

create_wasta_apps_dir()
{
    # If no current WASTA_USER_APPS_DIR, Load up default Wasta Menus Applications List
    if ! wasta_apps_dir_exists
    then
        # create symlinks for wasta-menus (symlinks as part of package don't resolve
        #   correctly as they are turned into relative links.  So, re-do here:

        # First, create directory
        mkdir -p "$WASTA_USER_APPS_DIR"

        # Link in hidden system apps
        local SYSTEM_APPS=$(grep -i -s -l '^NoDisplay=true' ${SYSTEM_APPS_DIRS[@]/%//*.desktop})
        mkdir -p "$WASTA_SYSTEM_APPS_DIR"
        ln -s $SYSTEM_APPS "$WASTA_SYSTEM_APPS_DIR"

        # Problem if can't find default-apps file
        if [ ! -e $WASTA_DEFAULT_APPS ];
        then
            return 1
        fi

        # read in file
        #   if trimmed line is empty or starts with #, then ignore and read next
        #   else, create symlink in /wasta-base-setup/wasta-menus/applications folder.

        while read -r LINE
        do
            # Trim leading whitespace
            LINE="${LINE##*( )}"
            # trim trailing whitespace
            LINE="${LINE%%*( )}"

            # Create symlink IF:
            #   $LINE (trimmed) is NOT ZERO LENGTH  AND first character IS NOT "#"
            FIRST_CHAR=$(echo -n "$LINE" | head -c1)
            if [ -n "$LINE" ] && ! [ "$FIRST_CHAR" == "#" ];
            then
                # create symlink in $WASTA_USER_APPS_DIR Dir
                ln -sf "$LINE" "$WASTA_USER_APPS_DIR/"
            fi
        done < "$WASTA_DEFAULT_APPS"
    fi
}

remove_wasta_apps_dir()
{
    rm -rf "$WASTA_USER_APPS_DIR" "$WASTA_SYSTEM_APPS_DIR"
}

# Functions to migrate existing configuration from old locations

migrate_existing_config()
{
    local OLD_USER_APPS_DIR=$HOME/.local/share/applications-wasta

    if [ -e "$OLD_USER_APPS_DIR" ]
    then
        if [ ! -e "$WASTA_USER_APPS_DIR" ]
        then
            mv "$OLD_USER_APPS_DIR" "$WASTA_USER_APPS_DIR"
        else
            rm -f "$OLD_USER_APPS_DIR"
        fi
    fi

    if grep -s -q .local/share/applications-wasta $HOME/.config/menus/{cinnamon,gnome,xfce}-applications.menu
    then
        enable_wasta_menus
    fi

    rm -f $HOME/.config/menus/{cinnamon,gnome,xfce}-applications{,-wasta,-save}.menu
}
