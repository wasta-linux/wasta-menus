#!/bin/bash

# ==============================================================================
# wasta-menus
#
# This script is used to ENABLE, DISABLE, or REMOVE a user's Wasta-Menus.
#
# MANY THANKS to the LSDev Balsa team for the original concept.
#
#   2014-01-09 rik: Initial script
#   2014-01-21 rik: Added Gnome Wasta Menu processing (now wasta-menus will
#       process on cinnamon AND gnome menus)
#   2014-06-09 rik: adding pkexec hack to prompt for admin password.  Admin
#       ID not needed for script changes, but don't want limited users running.
#   2015-09-27 rik: correcting gnome menu name to gnome-applications.menu for
#       compatibility with Ubuntu Trust (+)
#
# ==============================================================================

# ------------------------------------------------------------------------------
# Load common functions
# ------------------------------------------------------------------------------
. $(dirname $0)/../share/wasta-menus/functions

# ------------------------------------------------------------------------------
# Ensure script running as regular user
# ------------------------------------------------------------------------------
if [ $(id -u) -eq 0 ]
then
    echo "This script should NOT be run with SUDO!  Must be regular user!!"
    echo "Exiting...."
    sleep 5s
    exit 1
fi

# ------------------------------------------------------------------------------
# Hack to ensure user knows an admin password: but again changes are made at the
#   user level, so this is just a hack but no admin password actually needed :)
# ------------------------------------------------------------------------------
pkexec echo "starting wasta-menus"
RETURN=$?
if [ $RETURN -ne 0 ];
then
    echo
    echo "*** Administrative Authentication failed, wasta-menus exiting..."
    echo
    exit 1
fi

# ------------------------------------------------------------------------------
# Initial Prompt
# ------------------------------------------------------------------------------

migrate_existing_config

RADIO_STATE=$(if wasta_menus_enabled; then echo ON; else echo OFF; fi)

radio() { if [ "$1" = "$RADIO_STATE" ]; then echo TRUE "${@}"; else echo FALSE "${@}"; fi; }

PARM=""
PARM=$(zenity --list --title "Wasta-Menus" \
    --window-icon=/usr/share/icons/hicolor/64x64/apps/wasta-menus.png \
    --height=450 --text \
"This utility <b>ENABLES</b> or <b>DISABLES</b> the current user's Wasta-Menus,
    which reduce the applications visible in the Main Menu.

Additionally, a user's Wasta-Menus can be <b>REMOVED</b> to completely remove
    any saved Wasta-Menus settings.

If there is any problem with a user's Wasta-Menus and they need <b>RESET</b>,
    first <b>REMOVE</b> them and then <b>ENABLE</b> them again.

Use <b>Wasta-Menus Add App</b> to add additional applications to the current
    user's Wasta-Menus.

<b>SELECT the Wasta-Menus ACTION you want to perform:</b>"  --radiolist \
    --column "" --column "Action" --column "Description" \
    $(radio ON)      "'ENABLE' Wasta-Menus" \
    $(radio OFF)     "'DISABLE' Wasta-Menus" \
    $(radio REMOVE)  "'REMOVE' current user's Wasta-Menus settings")

if [ -z "$PARM" ];
then
    zenity --info --no-wrap \
        --window-icon=/usr/share/icons/hicolor/64x64/apps/wasta-menus.png \
        --text "No Wasta-Menus <b>ACTION</b> selected.  Exiting..."
    exit 0
fi

# ------------------------------------------------------------------------------
# Main Processing
# ------------------------------------------------------------------------------

MSG=""

case "$PARM" in
    ON)
        # ----------------------------------------------------------------------
        # Ensure restrict-applications is symlinked
        # ----------------------------------------------------------------------
        if ! wasta_menus_enabled
        then
            MSG+="<b>ENABLING</b> Wasta-Menus for current user...\n\n"
            enable_wasta_menus
            MSG+="<b>Wasta-Menus successfully ENABLED</b>\n\n"
        else
            # Wasta Menus already Enabled
            MSG+="Wasta-Menus already <b>ENABLED</b> for current user.\n\n"
        fi

        # ----------------------------------------------------------------------
        # Ensure $WASTA_USER_APPS_DIR setup
        # ----------------------------------------------------------------------
        if ! wasta_apps_dir_exists
        then
            MSG+=\
"No existing Wasta-Menus Applications List found for current user.\n
<b>Creating default Wasta-Menus Applications List.</b>\n\n"
            if ! create_wasta_apps_dir
            then
                MSG+=\
"<b>PROBLEM FOUND: No default Wasta-Menus Applications List</b>
Work with and Administrator to solve the problem.\n\n"
            fi
        else
            MSG+="Using existing Wasta-Menus Applications List for current user.\n\n"
        fi
    ;;

    OFF)
        if wasta_menus_enabled
        then
            MSG+="<b>DISABLING</b> Wasta-Menus for current user...\n\n"
            disable_wasta_menus
            MSG+="<b>Wasta-Menus successfully DISABLED</b>\n\n"
        else
            MSG+="Wasta-Menus already <b>DISABLED</b> for current user!\n\n <b>No Action Taken!</b>\n\n"
        fi
    ;;

    REMOVE)
        MSG+="Preparing to <b>REMOVE</b> Wasta-Menus for current user...\n\n"
        # clean wasta-menus (clear out local saved items: wasta menus must be
        #   turned OFF first, so we know we only have to clear out saved -wasta
        #   menu and apps.

        # give an "are you sure?" to the user
        CONFIRM=$(zenity --list --title "REMOVE Wasta-Menus Settings?" \
            --window-icon=/usr/share/icons/hicolor/64x64/apps/wasta-menus.png \
            --text \
"<b>Are you sure you want to completely REMOVE
the current user's Wasta-Menus settings?</b>" --radiolist \
            --column "" --column "Action" --column "Description" \
        FALSE YES "YES, I am sure!"\
        FALSE NO  "NO, do NOT remove!")

        echo "CONFIRM: "$CONFIRM

        if [ "$CONFIRM" == "YES" ];
        then
            MSG+="<b>DISABLING</b> Wasta-Menus for current user...\n\n"
            disable_wasta_menus

            MSG+="<b>REMOVING</b> Wasta-Menus Applications List for current user.\n\n"
            remove_wasta_apps_dir

            MSG+="<b>Wasta-Menus successfully REMOVED</b>\n\n"
        else
            MSG+="<b>Wasta-Menus REMOVAL CANCELED!</b>\n\n"
        fi
    ;;

    *)
        MSG+="ERROR: parameter value not recognized!\n\n"
    ;;
esac

MSG+="<b>Finished Processing</b>"

# ------------------------------------------------------------------------------
# Finished
# ------------------------------------------------------------------------------
zenity --info --title "Wasta-Menus: Finished" --no-wrap \
        --window-icon=/usr/share/icons/hicolor/64x64/apps/wasta-menus.png \
        --text "$MSG"

exit 0
